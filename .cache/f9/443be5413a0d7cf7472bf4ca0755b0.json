{"id":"node_modules/date-fns/esm/isValid/index.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543407323096},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\date-fns\\esm\\isValid\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\date-fns\\esm\\toDate\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid('2014-02-31')\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index.default)(dirtyDate, dirtyOptions);\n  return !isNaN(date);\n}","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":3,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":15}},{"name":"isValid","generated":{"line":46,"column":9},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":24}},{"generated":{"line":46,"column":16},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":15}},{"name":"dirtyDate","generated":{"line":46,"column":17},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":33}},{"generated":{"line":46,"column":26},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":15}},{"name":"dirtyOptions","generated":{"line":46,"column":28},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":44}},{"generated":{"line":46,"column":40},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":15}},{"generated":{"line":46,"column":42},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":58}},{"generated":{"line":47,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":2}},{"name":"arguments","generated":{"line":47,"column":6},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":6}},{"generated":{"line":47,"column":15},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":15}},{"name":"length","generated":{"line":47,"column":16},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":16}},{"generated":{"line":47,"column":22},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":6}},{"generated":{"line":47,"column":25},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":25}},{"generated":{"line":47,"column":26},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":2}},{"generated":{"line":47,"column":28},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":28}},{"generated":{"line":48,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":4}},{"generated":{"line":48,"column":10},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":10}},{"name":"TypeError","generated":{"line":48,"column":14},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":14}},{"generated":{"line":48,"column":23},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":10}},{"generated":{"line":48,"column":24},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":24}},{"name":"arguments","generated":{"line":48,"column":59},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":59}},{"generated":{"line":48,"column":68},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":68}},{"name":"length","generated":{"line":48,"column":69},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":69}},{"generated":{"line":48,"column":75},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":24}},{"generated":{"line":48,"column":78},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":78}},{"generated":{"line":48,"column":88},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":10}},{"generated":{"line":48,"column":89},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":4}},{"generated":{"line":49,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":3}},{"generated":{"line":51,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":2}},{"name":"date","generated":{"line":51,"column":6},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":6}},{"generated":{"line":51,"column":10},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":10}},{"generated":{"line":51,"column":13},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":13}},{"name":"dirtyDate","generated":{"line":51,"column":33},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":20}},{"generated":{"line":51,"column":42},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":13}},{"name":"dirtyOptions","generated":{"line":51,"column":44},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":31}},{"generated":{"line":51,"column":56},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":13}},{"generated":{"line":51,"column":57},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":2}},{"generated":{"line":52,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":2}},{"generated":{"line":52,"column":9},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":9}},{"name":"isNaN","generated":{"line":52,"column":10},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":10}},{"generated":{"line":52,"column":15},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":15}},{"name":"date","generated":{"line":52,"column":16},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":16}},{"generated":{"line":52,"column":20},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":15}},{"generated":{"line":52,"column":21},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":1}}],"sources":{"node_modules/date-fns/esm/isValid/index.js":"import toDate from '../toDate/index.js'\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid('2014-02-31')\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions)\n  return !isNaN(date)\n}\n"},"lineCount":null}},"hash":"53c3ab9784a2e00384d239ebcd7e504d","cacheData":{"env":{}}}