{"id":"node_modules/png-js/png-node.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543404183975},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\png-js\\package.json","includedInParent":true,"mtime":1543360453628},{"name":"fs","loc":{"line":27,"column":15},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\nabaa96\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"zlib","loc":{"line":29,"column":17},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\nabaa96\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\browserify-zlib\\lib\\index.js"},{"name":"buffer","parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\nabaa96\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// Generated by CoffeeScript 1.4.0\n\n/*\n# MIT LICENSE\n# Copyright (c) 2011 Devon Govett\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy of this \n# software and associated documentation files (the \"Software\"), to deal in the Software \n# without restriction, including without limitation the rights to use, copy, modify, merge, \n# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons \n# to whom the Software is furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all copies or \n# substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \n# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n(function() {\n  var PNG, fs, zlib;\n\n  fs = require('fs');\n\n  zlib = require('zlib');\n\n  module.exports = PNG = (function() {\n\n    PNG.decode = function(path, fn) {\n      return fs.readFile(path, function(err, file) {\n        var png;\n        png = new PNG(file);\n        return png.decode(function(pixels) {\n          return fn(pixels);\n        });\n      });\n    };\n\n    PNG.load = function(path) {\n      var file;\n      file = fs.readFileSync(path);\n      return new PNG(file);\n    };\n\n    function PNG(data) {\n      var chunkSize, colors, i, index, key, section, short, text, _i, _j, _ref;\n      this.data = data;\n      this.pos = 8;\n      this.palette = [];\n      this.imgData = [];\n      this.transparency = {};\n      this.text = {};\n      while (true) {\n        chunkSize = this.readUInt32();\n        section = ((function() {\n          var _i, _results;\n          _results = [];\n          for (i = _i = 0; _i < 4; i = ++_i) {\n            _results.push(String.fromCharCode(this.data[this.pos++]));\n          }\n          return _results;\n        }).call(this)).join('');\n        switch (section) {\n          case 'IHDR':\n            this.width = this.readUInt32();\n            this.height = this.readUInt32();\n            this.bits = this.data[this.pos++];\n            this.colorType = this.data[this.pos++];\n            this.compressionMethod = this.data[this.pos++];\n            this.filterMethod = this.data[this.pos++];\n            this.interlaceMethod = this.data[this.pos++];\n            break;\n          case 'PLTE':\n            this.palette = this.read(chunkSize);\n            break;\n          case 'IDAT':\n            for (i = _i = 0; _i < chunkSize; i = _i += 1) {\n              this.imgData.push(this.data[this.pos++]);\n            }\n            break;\n          case 'tRNS':\n            this.transparency = {};\n            switch (this.colorType) {\n              case 3:\n                this.transparency.indexed = this.read(chunkSize);\n                short = 255 - this.transparency.indexed.length;\n                if (short > 0) {\n                  for (i = _j = 0; 0 <= short ? _j < short : _j > short; i = 0 <= short ? ++_j : --_j) {\n                    this.transparency.indexed.push(255);\n                  }\n                }\n                break;\n              case 0:\n                this.transparency.grayscale = this.read(chunkSize)[0];\n                break;\n              case 2:\n                this.transparency.rgb = this.read(chunkSize);\n            }\n            break;\n          case 'tEXt':\n            text = this.read(chunkSize);\n            index = text.indexOf(0);\n            key = String.fromCharCode.apply(String, text.slice(0, index));\n            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n            break;\n          case 'IEND':\n            this.colors = (function() {\n              switch (this.colorType) {\n                case 0:\n                case 3:\n                case 4:\n                  return 1;\n                case 2:\n                case 6:\n                  return 3;\n              }\n            }).call(this);\n            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\n            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n            this.pixelBitlength = this.bits * colors;\n            this.colorSpace = (function() {\n              switch (this.colors) {\n                case 1:\n                  return 'DeviceGray';\n                case 3:\n                  return 'DeviceRGB';\n              }\n            }).call(this);\n            this.imgData = new Buffer(this.imgData);\n            return;\n          default:\n            this.pos += chunkSize;\n        }\n        this.pos += 4;\n        if (this.pos > this.data.length) {\n          throw new Error(\"Incomplete or corrupt PNG file\");\n        }\n      }\n      return;\n    }\n\n    PNG.prototype.read = function(bytes) {\n      var i, _i, _results;\n      _results = [];\n      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\n        _results.push(this.data[this.pos++]);\n      }\n      return _results;\n    };\n\n    PNG.prototype.readUInt32 = function() {\n      var b1, b2, b3, b4;\n      b1 = this.data[this.pos++] << 24;\n      b2 = this.data[this.pos++] << 16;\n      b3 = this.data[this.pos++] << 8;\n      b4 = this.data[this.pos++];\n      return b1 | b2 | b3 | b4;\n    };\n\n    PNG.prototype.readUInt16 = function() {\n      var b1, b2;\n      b1 = this.data[this.pos++] << 8;\n      b2 = this.data[this.pos++];\n      return b1 | b2;\n    };\n\n    PNG.prototype.decodePixels = function(fn) {\n      var _this = this;\n      return zlib.inflate(this.imgData, function(err, data) {\n        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;\n        if (err) {\n          throw err;\n        }\n        pixelBytes = _this.pixelBitlength / 8;\n        scanlineLength = pixelBytes * _this.width;\n        pixels = new Buffer(scanlineLength * _this.height);\n        length = data.length;\n        row = 0;\n        pos = 0;\n        c = 0;\n        while (pos < length) {\n          switch (data[pos++]) {\n            case 0:\n              for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\n                pixels[c++] = data[pos++];\n              }\n              break;\n            case 1:\n              for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                pixels[c++] = (byte + left) % 256;\n              }\n              break;\n            case 2:\n              for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (upper + byte) % 256;\n              }\n              break;\n            case 3:\n              for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n            case 4:\n              for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                  upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];\n                }\n                p = left + upper - upperLeft;\n                pa = Math.abs(p - left);\n                pb = Math.abs(p - upper);\n                pc = Math.abs(p - upperLeft);\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n                pixels[c++] = (byte + paeth) % 256;\n              }\n              break;\n            default:\n              throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n          }\n          row++;\n        }\n        return fn(pixels);\n      });\n    };\n\n    PNG.prototype.decodePalette = function() {\n      var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\n      palette = this.palette;\n      transparency = this.transparency.indexed || [];\n      ret = new Buffer(transparency.length + palette.length);\n      pos = 0;\n      length = palette.length;\n      c = 0;\n      for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {\n        ret[pos++] = palette[i];\n        ret[pos++] = palette[i + 1];\n        ret[pos++] = palette[i + 2];\n        ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\n      }\n      return ret;\n    };\n\n    PNG.prototype.copyToImageData = function(imageData, pixels) {\n      var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\n      colors = this.colors;\n      palette = null;\n      alpha = this.hasAlphaChannel;\n      if (this.palette.length) {\n        palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();\n        colors = 4;\n        alpha = true;\n      }\n      data = (imageData != null ? imageData.data : void 0) || imageData;\n      length = data.length;\n      input = palette || pixels;\n      i = j = 0;\n      if (colors === 1) {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          v = input[k++];\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      } else {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      }\n    };\n\n    PNG.prototype.decode = function(fn) {\n      var ret,\n        _this = this;\n      ret = new Buffer(this.width * this.height * 4);\n      return this.decodePixels(function(pixels) {\n        _this.copyToImageData(ret, pixels);\n        return fn(ret);\n      });\n    };\n\n    return PNG;\n\n  })();\n\n}).call(this);\n","map":{"mappings":[{"source":"node_modules/png-js/png-node.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/png-js/png-node.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}}],"sources":{"node_modules/png-js/png-node.js":"// Generated by CoffeeScript 1.4.0\n\n/*\n# MIT LICENSE\n# Copyright (c) 2011 Devon Govett\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy of this \n# software and associated documentation files (the \"Software\"), to deal in the Software \n# without restriction, including without limitation the rights to use, copy, modify, merge, \n# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons \n# to whom the Software is furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all copies or \n# substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \n# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n(function() {\n  var PNG, fs, zlib;\n\n  fs = require('fs');\n\n  zlib = require('zlib');\n\n  module.exports = PNG = (function() {\n\n    PNG.decode = function(path, fn) {\n      return fs.readFile(path, function(err, file) {\n        var png;\n        png = new PNG(file);\n        return png.decode(function(pixels) {\n          return fn(pixels);\n        });\n      });\n    };\n\n    PNG.load = function(path) {\n      var file;\n      file = fs.readFileSync(path);\n      return new PNG(file);\n    };\n\n    function PNG(data) {\n      var chunkSize, colors, i, index, key, section, short, text, _i, _j, _ref;\n      this.data = data;\n      this.pos = 8;\n      this.palette = [];\n      this.imgData = [];\n      this.transparency = {};\n      this.text = {};\n      while (true) {\n        chunkSize = this.readUInt32();\n        section = ((function() {\n          var _i, _results;\n          _results = [];\n          for (i = _i = 0; _i < 4; i = ++_i) {\n            _results.push(String.fromCharCode(this.data[this.pos++]));\n          }\n          return _results;\n        }).call(this)).join('');\n        switch (section) {\n          case 'IHDR':\n            this.width = this.readUInt32();\n            this.height = this.readUInt32();\n            this.bits = this.data[this.pos++];\n            this.colorType = this.data[this.pos++];\n            this.compressionMethod = this.data[this.pos++];\n            this.filterMethod = this.data[this.pos++];\n            this.interlaceMethod = this.data[this.pos++];\n            break;\n          case 'PLTE':\n            this.palette = this.read(chunkSize);\n            break;\n          case 'IDAT':\n            for (i = _i = 0; _i < chunkSize; i = _i += 1) {\n              this.imgData.push(this.data[this.pos++]);\n            }\n            break;\n          case 'tRNS':\n            this.transparency = {};\n            switch (this.colorType) {\n              case 3:\n                this.transparency.indexed = this.read(chunkSize);\n                short = 255 - this.transparency.indexed.length;\n                if (short > 0) {\n                  for (i = _j = 0; 0 <= short ? _j < short : _j > short; i = 0 <= short ? ++_j : --_j) {\n                    this.transparency.indexed.push(255);\n                  }\n                }\n                break;\n              case 0:\n                this.transparency.grayscale = this.read(chunkSize)[0];\n                break;\n              case 2:\n                this.transparency.rgb = this.read(chunkSize);\n            }\n            break;\n          case 'tEXt':\n            text = this.read(chunkSize);\n            index = text.indexOf(0);\n            key = String.fromCharCode.apply(String, text.slice(0, index));\n            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n            break;\n          case 'IEND':\n            this.colors = (function() {\n              switch (this.colorType) {\n                case 0:\n                case 3:\n                case 4:\n                  return 1;\n                case 2:\n                case 6:\n                  return 3;\n              }\n            }).call(this);\n            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\n            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n            this.pixelBitlength = this.bits * colors;\n            this.colorSpace = (function() {\n              switch (this.colors) {\n                case 1:\n                  return 'DeviceGray';\n                case 3:\n                  return 'DeviceRGB';\n              }\n            }).call(this);\n            this.imgData = new Buffer(this.imgData);\n            return;\n          default:\n            this.pos += chunkSize;\n        }\n        this.pos += 4;\n        if (this.pos > this.data.length) {\n          throw new Error(\"Incomplete or corrupt PNG file\");\n        }\n      }\n      return;\n    }\n\n    PNG.prototype.read = function(bytes) {\n      var i, _i, _results;\n      _results = [];\n      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\n        _results.push(this.data[this.pos++]);\n      }\n      return _results;\n    };\n\n    PNG.prototype.readUInt32 = function() {\n      var b1, b2, b3, b4;\n      b1 = this.data[this.pos++] << 24;\n      b2 = this.data[this.pos++] << 16;\n      b3 = this.data[this.pos++] << 8;\n      b4 = this.data[this.pos++];\n      return b1 | b2 | b3 | b4;\n    };\n\n    PNG.prototype.readUInt16 = function() {\n      var b1, b2;\n      b1 = this.data[this.pos++] << 8;\n      b2 = this.data[this.pos++];\n      return b1 | b2;\n    };\n\n    PNG.prototype.decodePixels = function(fn) {\n      var _this = this;\n      return zlib.inflate(this.imgData, function(err, data) {\n        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;\n        if (err) {\n          throw err;\n        }\n        pixelBytes = _this.pixelBitlength / 8;\n        scanlineLength = pixelBytes * _this.width;\n        pixels = new Buffer(scanlineLength * _this.height);\n        length = data.length;\n        row = 0;\n        pos = 0;\n        c = 0;\n        while (pos < length) {\n          switch (data[pos++]) {\n            case 0:\n              for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\n                pixels[c++] = data[pos++];\n              }\n              break;\n            case 1:\n              for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                pixels[c++] = (byte + left) % 256;\n              }\n              break;\n            case 2:\n              for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (upper + byte) % 256;\n              }\n              break;\n            case 3:\n              for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n            case 4:\n              for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                  upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];\n                }\n                p = left + upper - upperLeft;\n                pa = Math.abs(p - left);\n                pb = Math.abs(p - upper);\n                pc = Math.abs(p - upperLeft);\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n                pixels[c++] = (byte + paeth) % 256;\n              }\n              break;\n            default:\n              throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n          }\n          row++;\n        }\n        return fn(pixels);\n      });\n    };\n\n    PNG.prototype.decodePalette = function() {\n      var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\n      palette = this.palette;\n      transparency = this.transparency.indexed || [];\n      ret = new Buffer(transparency.length + palette.length);\n      pos = 0;\n      length = palette.length;\n      c = 0;\n      for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {\n        ret[pos++] = palette[i];\n        ret[pos++] = palette[i + 1];\n        ret[pos++] = palette[i + 2];\n        ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\n      }\n      return ret;\n    };\n\n    PNG.prototype.copyToImageData = function(imageData, pixels) {\n      var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\n      colors = this.colors;\n      palette = null;\n      alpha = this.hasAlphaChannel;\n      if (this.palette.length) {\n        palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();\n        colors = 4;\n        alpha = true;\n      }\n      data = (imageData != null ? imageData.data : void 0) || imageData;\n      length = data.length;\n      input = palette || pixels;\n      i = j = 0;\n      if (colors === 1) {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          v = input[k++];\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      } else {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      }\n    };\n\n    PNG.prototype.decode = function(fn) {\n      var ret,\n        _this = this;\n      ret = new Buffer(this.width * this.height * 4);\n      return this.decodePixels(function(pixels) {\n        _this.copyToImageData(ret, pixels);\n        return fn(ret);\n      });\n    };\n\n    return PNG;\n\n  })();\n\n}).call(this);\n"},"lineCount":319}},"hash":"a933c58d8d8926e85aac776f6c32f0cc","cacheData":{"env":{}}}