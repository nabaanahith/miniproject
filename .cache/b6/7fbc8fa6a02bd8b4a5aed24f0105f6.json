{"id":"node_modules/restructure/src/VersionedStruct.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543404183975},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\package.json","includedInParent":true,"mtime":1543360452155},{"name":"./Struct","loc":{"line":7,"column":19},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\VersionedStruct.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\Struct.js"}],"generated":{"js":"// Generated by CoffeeScript 1.7.1\n(function() {\n  var Struct, VersionedStruct,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Struct = require('./Struct');\n\n  VersionedStruct = (function(_super) {\n    __extends(VersionedStruct, _super);\n\n    function VersionedStruct(type, versions) {\n      this.type = type;\n      this.versions = versions != null ? versions : {};\n      if (typeof this.type === 'string') {\n        this.versionGetter = new Function('parent', \"return parent.\" + this.type);\n        this.versionSetter = new Function('parent', 'version', \"return parent.\" + this.type + \" = version\");\n      }\n    }\n\n    VersionedStruct.prototype.decode = function(stream, parent, length) {\n      var fields, res, _ref;\n      if (length == null) {\n        length = 0;\n      }\n      res = this._setup(stream, parent, length);\n      if (typeof this.type === 'string') {\n        res.version = this.versionGetter(parent);\n      } else {\n        res.version = this.type.decode(stream);\n      }\n      if (this.versions.header) {\n        this._parseFields(stream, res, this.versions.header);\n      }\n      fields = this.versions[res.version];\n      if (fields == null) {\n        throw new Error(\"Unknown version \" + res.version);\n      }\n      if (fields instanceof VersionedStruct) {\n        return fields.decode(stream, parent);\n      }\n      this._parseFields(stream, res, fields);\n      if ((_ref = this.process) != null) {\n        _ref.call(res, stream);\n      }\n      return res;\n    };\n\n    VersionedStruct.prototype.size = function(val, parent, includePointers) {\n      var ctx, fields, key, size, type, _ref;\n      if (includePointers == null) {\n        includePointers = true;\n      }\n      if (!val) {\n        throw new Error('Not a fixed size');\n      }\n      ctx = {\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      size = 0;\n      if (typeof this.type !== 'string') {\n        size += this.type.size(val.version, ctx);\n      }\n      if (this.versions.header) {\n        _ref = this.versions.header;\n        for (key in _ref) {\n          type = _ref[key];\n          if (type.size != null) {\n            size += type.size(val[key], ctx);\n          }\n        }\n      }\n      fields = this.versions[val.version];\n      if (fields == null) {\n        throw new Error(\"Unknown version \" + val.version);\n      }\n      for (key in fields) {\n        type = fields[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n      if (includePointers) {\n        size += ctx.pointerSize;\n      }\n      return size;\n    };\n\n    VersionedStruct.prototype.encode = function(stream, val, parent) {\n      var ctx, fields, i, key, ptr, type, _ref, _ref1;\n      if ((_ref = this.preEncode) != null) {\n        _ref.call(val, stream);\n      }\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n      if (typeof this.type !== 'string') {\n        this.type.encode(stream, val.version);\n      }\n      if (this.versions.header) {\n        _ref1 = this.versions.header;\n        for (key in _ref1) {\n          type = _ref1[key];\n          if (type.encode != null) {\n            type.encode(stream, val[key], ctx);\n          }\n        }\n      }\n      fields = this.versions[val.version];\n      for (key in fields) {\n        type = fields[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n      i = 0;\n      while (i < ctx.pointers.length) {\n        ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    };\n\n    return VersionedStruct;\n\n  })(Struct);\n\n  module.exports = VersionedStruct;\n\n}).call(this);\n","map":{"mappings":[{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/restructure/src/VersionedStruct.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/restructure/src/VersionedStruct.js":"// Generated by CoffeeScript 1.7.1\n(function() {\n  var Struct, VersionedStruct,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Struct = require('./Struct');\n\n  VersionedStruct = (function(_super) {\n    __extends(VersionedStruct, _super);\n\n    function VersionedStruct(type, versions) {\n      this.type = type;\n      this.versions = versions != null ? versions : {};\n      if (typeof this.type === 'string') {\n        this.versionGetter = new Function('parent', \"return parent.\" + this.type);\n        this.versionSetter = new Function('parent', 'version', \"return parent.\" + this.type + \" = version\");\n      }\n    }\n\n    VersionedStruct.prototype.decode = function(stream, parent, length) {\n      var fields, res, _ref;\n      if (length == null) {\n        length = 0;\n      }\n      res = this._setup(stream, parent, length);\n      if (typeof this.type === 'string') {\n        res.version = this.versionGetter(parent);\n      } else {\n        res.version = this.type.decode(stream);\n      }\n      if (this.versions.header) {\n        this._parseFields(stream, res, this.versions.header);\n      }\n      fields = this.versions[res.version];\n      if (fields == null) {\n        throw new Error(\"Unknown version \" + res.version);\n      }\n      if (fields instanceof VersionedStruct) {\n        return fields.decode(stream, parent);\n      }\n      this._parseFields(stream, res, fields);\n      if ((_ref = this.process) != null) {\n        _ref.call(res, stream);\n      }\n      return res;\n    };\n\n    VersionedStruct.prototype.size = function(val, parent, includePointers) {\n      var ctx, fields, key, size, type, _ref;\n      if (includePointers == null) {\n        includePointers = true;\n      }\n      if (!val) {\n        throw new Error('Not a fixed size');\n      }\n      ctx = {\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      size = 0;\n      if (typeof this.type !== 'string') {\n        size += this.type.size(val.version, ctx);\n      }\n      if (this.versions.header) {\n        _ref = this.versions.header;\n        for (key in _ref) {\n          type = _ref[key];\n          if (type.size != null) {\n            size += type.size(val[key], ctx);\n          }\n        }\n      }\n      fields = this.versions[val.version];\n      if (fields == null) {\n        throw new Error(\"Unknown version \" + val.version);\n      }\n      for (key in fields) {\n        type = fields[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n      if (includePointers) {\n        size += ctx.pointerSize;\n      }\n      return size;\n    };\n\n    VersionedStruct.prototype.encode = function(stream, val, parent) {\n      var ctx, fields, i, key, ptr, type, _ref, _ref1;\n      if ((_ref = this.preEncode) != null) {\n        _ref.call(val, stream);\n      }\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n      if (typeof this.type !== 'string') {\n        this.type.encode(stream, val.version);\n      }\n      if (this.versions.header) {\n        _ref1 = this.versions.header;\n        for (key in _ref1) {\n          type = _ref1[key];\n          if (type.encode != null) {\n            type.encode(stream, val[key], ctx);\n          }\n        }\n      }\n      fields = this.versions[val.version];\n      for (key in fields) {\n        type = fields[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n      i = 0;\n      while (i < ctx.pointers.length) {\n        ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    };\n\n    return VersionedStruct;\n\n  })(Struct);\n\n  module.exports = VersionedStruct;\n\n}).call(this);\n"},"lineCount":137}},"hash":"e91f027c27be51004bf11f4f066f2bac","cacheData":{"env":{}}}