{"id":"node_modules/joi/lib/types/lazy/index.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1545918419085},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\joi\\package.json","includedInParent":true,"mtime":1545669307947},{"name":"../any","loc":{"line":5,"column":20},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\joi\\lib\\types\\lazy\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\joi\\lib\\types\\any\\index.js"},{"name":"hoek","loc":{"line":6,"column":21},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\joi\\lib\\types\\lazy\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\hoek\\lib\\index.js"}],"generated":{"js":"'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n        this._flags.once = true;\n        this._cache = null;\n    }\n\n    _init(fn, options) {\n\n        return this.set(fn, options);\n    }\n\n    _base(value, state, options) {\n\n        let schema;\n        if (this._cache) {\n            schema = this._cache;\n        }\n        else {\n            const result = { value };\n            const lazy = this._flags.lazy;\n\n            if (!lazy) {\n                result.errors = this.createError('lazy.base', null, state, options);\n                return result;\n            }\n\n            schema = lazy();\n\n            if (!(schema instanceof Any)) {\n                result.errors = this.createError('lazy.schema', { schema }, state, options);\n                return result;\n            }\n\n            if (this._flags.once) {\n                this._cache = schema;\n            }\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn, options) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n        Hoek.assert(options === undefined || (options && typeof options === 'object' && !Array.isArray(options)), `Options must be an object`);\n\n        if (options) {\n            const unknownOptions = Object.keys(options).filter((key) => !['once'].includes(key));\n            Hoek.assert(unknownOptions.length === 0, `Options contain unknown keys: ${unknownOptions}`);\n            Hoek.assert(options.once === undefined || typeof options.once === 'boolean', 'Option \"once\" must be a boolean');\n        }\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n\n        if (options && options.once !== obj._flags.once) {\n            obj._flags.once = options.once;\n        }\n\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n","map":{"mappings":[{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/joi/lib/types/lazy/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}}],"sources":{"node_modules/joi/lib/types/lazy/index.js":"'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n        this._flags.once = true;\n        this._cache = null;\n    }\n\n    _init(fn, options) {\n\n        return this.set(fn, options);\n    }\n\n    _base(value, state, options) {\n\n        let schema;\n        if (this._cache) {\n            schema = this._cache;\n        }\n        else {\n            const result = { value };\n            const lazy = this._flags.lazy;\n\n            if (!lazy) {\n                result.errors = this.createError('lazy.base', null, state, options);\n                return result;\n            }\n\n            schema = lazy();\n\n            if (!(schema instanceof Any)) {\n                result.errors = this.createError('lazy.schema', { schema }, state, options);\n                return result;\n            }\n\n            if (this._flags.once) {\n                this._cache = schema;\n            }\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn, options) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n        Hoek.assert(options === undefined || (options && typeof options === 'object' && !Array.isArray(options)), `Options must be an object`);\n\n        if (options) {\n            const unknownOptions = Object.keys(options).filter((key) => !['once'].includes(key));\n            Hoek.assert(unknownOptions.length === 0, `Options contain unknown keys: ${unknownOptions}`);\n            Hoek.assert(options.once === undefined || typeof options.once === 'boolean', 'Option \"once\" must be a boolean');\n        }\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n\n        if (options && options.once !== obj._flags.once) {\n            obj._flags.once = options.once;\n        }\n\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n"},"lineCount":83}},"hash":"8cb7597e51070653644dc6c8d142bc74","cacheData":{"env":{}}}