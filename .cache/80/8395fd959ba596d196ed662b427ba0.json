{"id":"node_modules/brotli/dec/decode.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543404183975},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\package.json","includedInParent":true,"mtime":1543360451600},{"name":"./streams","loc":{"line":17,"column":27},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\streams.js"},{"name":"./bit_reader","loc":{"line":18,"column":30},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\bit_reader.js"},{"name":"./dictionary","loc":{"line":19,"column":31},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\dictionary.js"},{"name":"./huffman","loc":{"line":21,"column":38},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\huffman.js"},{"name":"./context","loc":{"line":22,"column":22},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\context.js"},{"name":"./prefix","loc":{"line":23,"column":21},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\prefix.js"},{"name":"./transform","loc":{"line":24,"column":24},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\decode.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\brotli\\dec\\transform.js"}],"generated":{"js":"/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n","map":{"mappings":[{"source":"node_modules/brotli/dec/decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/brotli/dec/decode.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}}],"sources":{"node_modules/brotli/dec/decode.js":"/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n"},"lineCount":939}},"hash":"d45a44c8e9b8f6526a54a4070aee6915","cacheData":{"env":{}}}