{"id":"node_modules/joi/lib/types/boolean/index.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\package.json","includedInParent":true,"mtime":1545918419085},{"name":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\package.json","includedInParent":true,"mtime":1545669307947},{"name":"../any","loc":{"line":5,"column":20},"parent":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\lib\\types\\boolean\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\lib\\types\\any\\index.js"},{"name":"hoek","loc":{"line":6,"column":21},"parent":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\lib\\types\\boolean\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\hoek\\lib\\index.js"},{"name":"../../set","loc":{"line":12,"column":17},"parent":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\lib\\types\\boolean\\index.js","resolved":"C:\\Users\\nabaa96\\Desktop\\fikra\\miniprojectcc\\node_modules\\joi\\lib\\set.js"}],"generated":{"js":"'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    Set: require('../../set')\n};\n\n\ninternals.Boolean = class extends Any {\n    constructor() {\n\n        super();\n        this._type = 'boolean';\n        this._flags.insensitive = true;\n        this._inner.truthySet = new internals.Set();\n        this._inner.falsySet = new internals.Set();\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            const normalized = this._flags.insensitive ? value.toLowerCase() : value;\n            result.value = (normalized === 'true' ? true\n                : (normalized === 'false' ? false : value));\n        }\n\n        if (typeof result.value !== 'boolean') {\n            result.value = (this._inner.truthySet.has(value, null, null, this._flags.insensitive) ? true\n                : (this._inner.falsySet.has(value, null, null, this._flags.insensitive) ? false : value));\n        }\n\n        result.errors = (typeof result.value === 'boolean') ? null : this.createError('boolean.base', { value }, state, options);\n        return result;\n    }\n\n    truthy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call truthy with undefined');\n            obj._inner.truthySet.add(value);\n        }\n\n        return obj;\n    }\n\n    falsy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call falsy with undefined');\n            obj._inner.falsySet.add(value);\n        }\n\n        return obj;\n    }\n\n    insensitive(enabled) {\n\n        const insensitive = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.insensitive === insensitive) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.insensitive = insensitive;\n        return obj;\n    }\n\n    describe() {\n\n        const description = super.describe();\n        description.truthy = [true, ...this._inner.truthySet.values()];\n        description.falsy = [false, ...this._inner.falsySet.values()];\n        return description;\n    }\n};\n\n\nmodule.exports = new internals.Boolean();\n","map":{"mappings":[{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/joi/lib/types/boolean/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}}],"sources":{"node_modules/joi/lib/types/boolean/index.js":"'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    Set: require('../../set')\n};\n\n\ninternals.Boolean = class extends Any {\n    constructor() {\n\n        super();\n        this._type = 'boolean';\n        this._flags.insensitive = true;\n        this._inner.truthySet = new internals.Set();\n        this._inner.falsySet = new internals.Set();\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            const normalized = this._flags.insensitive ? value.toLowerCase() : value;\n            result.value = (normalized === 'true' ? true\n                : (normalized === 'false' ? false : value));\n        }\n\n        if (typeof result.value !== 'boolean') {\n            result.value = (this._inner.truthySet.has(value, null, null, this._flags.insensitive) ? true\n                : (this._inner.falsySet.has(value, null, null, this._flags.insensitive) ? false : value));\n        }\n\n        result.errors = (typeof result.value === 'boolean') ? null : this.createError('boolean.base', { value }, state, options);\n        return result;\n    }\n\n    truthy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call truthy with undefined');\n            obj._inner.truthySet.add(value);\n        }\n\n        return obj;\n    }\n\n    falsy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call falsy with undefined');\n            obj._inner.falsySet.add(value);\n        }\n\n        return obj;\n    }\n\n    insensitive(enabled) {\n\n        const insensitive = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.insensitive === insensitive) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.insensitive = insensitive;\n        return obj;\n    }\n\n    describe() {\n\n        const description = super.describe();\n        description.truthy = [true, ...this._inner.truthySet.values()];\n        description.falsy = [false, ...this._inner.falsySet.values()];\n        return description;\n    }\n};\n\n\nmodule.exports = new internals.Boolean();\n"},"lineCount":101}},"hash":"c002a680689f112c093d5a0af4b031e7","cacheData":{"env":{}}}