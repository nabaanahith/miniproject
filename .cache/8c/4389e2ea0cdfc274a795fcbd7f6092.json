{"id":"node_modules/evergreen-ui/esm/scales/src/minorScale.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543407323096},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\evergreen-ui\\package.json","includedInParent":true,"mtime":1543238346991}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minorScale;\n\n/**\n * Helper function to conform to 4 (px) minor scale.\n * @param {number} x — unitless number\n * @return {number} - unitless number\n * @example\n * minorScale(3) => 3*4 = 12\n * minorScale(1) => 1*4 = 4\n */\nfunction minorScale(x) {\n  if (!Number.isInteger(x)) {\n    throw new TypeError(\"minorScale only accepts integers as input, instead \".concat(x, \" was passed.\"));\n  }\n\n  return x * 4;\n}","map":{"mappings":[{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":9,"column":15},"generated":{"line":16,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":"minorScale","original":{"line":9,"column":24},"generated":{"line":16,"column":9}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":9,"column":15},"generated":{"line":16,"column":19}},{"source":"../../../src/scales/src/minorScale.js","name":"x","original":{"line":9,"column":35},"generated":{"line":16,"column":20}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":9,"column":15},"generated":{"line":16,"column":21}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":9,"column":38},"generated":{"line":16,"column":23}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":6}},{"source":"../../../src/scales/src/minorScale.js","name":"Number","original":{"line":10,"column":7},"generated":{"line":17,"column":7}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":10,"column":13},"generated":{"line":17,"column":13}},{"source":"../../../src/scales/src/minorScale.js","name":"isInteger","original":{"line":10,"column":14},"generated":{"line":17,"column":14}},{"source":"../../../src/scales/src/minorScale.js","name":"Number","original":{"line":10,"column":7},"generated":{"line":17,"column":23}},{"source":"../../../src/scales/src/minorScale.js","name":"x","original":{"line":10,"column":24},"generated":{"line":17,"column":24}},{"source":"../../../src/scales/src/minorScale.js","name":"Number","original":{"line":10,"column":7},"generated":{"line":17,"column":25}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":26}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":10,"column":28},"generated":{"line":17,"column":28}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":4},"generated":{"line":18,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":10}},{"source":"../../../src/scales/src/minorScale.js","name":"TypeError","original":{"line":11,"column":14},"generated":{"line":18,"column":14}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":23}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":24}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":78}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":84}},{"source":"../../../src/scales/src/minorScale.js","name":"x","original":{"line":12,"column":60},"generated":{"line":18,"column":85}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":86}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":88}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":102}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":103}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":11,"column":4},"generated":{"line":18,"column":104}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":14,"column":3},"generated":{"line":19,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":15,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../src/scales/src/minorScale.js","name":"x","original":{"line":15,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":15,"column":10},"generated":{"line":21,"column":10}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":15,"column":13},"generated":{"line":21,"column":13}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":15,"column":2},"generated":{"line":21,"column":14}},{"source":"../../../src/scales/src/minorScale.js","name":null,"original":{"line":16,"column":1},"generated":{"line":22,"column":0}}],"sources":{"../../../src/scales/src/minorScale.js":"/**\n * Helper function to conform to 4 (px) minor scale.\n * @param {number} x — unitless number\n * @return {number} - unitless number\n * @example\n * minorScale(3) => 3*4 = 12\n * minorScale(1) => 1*4 = 4\n */\nexport default function minorScale(x) {\n  if (!Number.isInteger(x)) {\n    throw new TypeError(\n      `minorScale only accepts integers as input, instead ${x} was passed.`\n    )\n  }\n  return x * 4\n}\n"},"lineCount":null}},"hash":"afd99ead23c3855639a8fbad74e894b8","cacheData":{"env":{}}}