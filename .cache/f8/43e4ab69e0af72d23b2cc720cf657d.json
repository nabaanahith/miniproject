{"id":"node_modules/restructure/src/EncodeStream.js","dependencies":[{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\package.json","includedInParent":true,"mtime":1543404183975},{"name":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\package.json","includedInParent":true,"mtime":1543360452155},{"name":"stream","loc":{"line":7,"column":19},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\nabaa96\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\stream-browserify\\index.js"},{"name":"./DecodeStream","loc":{"line":9,"column":25},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\DecodeStream.js"},{"name":"iconv-lite","optional":true,"loc":{"line":12,"column":20},"parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\iconv-lite\\lib\\index.js"},{"name":"buffer","parent":"C:\\Users\\nabaa96\\Desktop\\miniproject\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\nabaa96\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var DecodeStream, EncodeStream, iconv, stream,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  stream = require('stream');\n\n  DecodeStream = require('./DecodeStream');\n\n  try {\n    iconv = require('iconv-lite');\n  } catch (_error) {}\n\n  EncodeStream = (function(_super) {\n    var key;\n\n    __extends(EncodeStream, _super);\n\n    function EncodeStream(bufferSize) {\n      if (bufferSize == null) {\n        bufferSize = 65536;\n      }\n      EncodeStream.__super__.constructor.apply(this, arguments);\n      this.buffer = new Buffer(bufferSize);\n      this.bufferOffset = 0;\n      this.pos = 0;\n    }\n\n    for (key in Buffer.prototype) {\n      if (key.slice(0, 5) === 'write') {\n        (function(key) {\n          var bytes;\n          bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n          return EncodeStream.prototype[key] = function(value) {\n            this.ensure(bytes);\n            this.buffer[key](value, this.bufferOffset);\n            this.bufferOffset += bytes;\n            return this.pos += bytes;\n          };\n        })(key);\n      }\n    }\n\n    EncodeStream.prototype._read = function() {};\n\n    EncodeStream.prototype.ensure = function(bytes) {\n      if (this.bufferOffset + bytes > this.buffer.length) {\n        return this.flush();\n      }\n    };\n\n    EncodeStream.prototype.flush = function() {\n      if (this.bufferOffset > 0) {\n        this.push(new Buffer(this.buffer.slice(0, this.bufferOffset)));\n        return this.bufferOffset = 0;\n      }\n    };\n\n    EncodeStream.prototype.writeBuffer = function(buffer) {\n      this.flush();\n      this.push(buffer);\n      return this.pos += buffer.length;\n    };\n\n    EncodeStream.prototype.writeString = function(string, encoding) {\n      var buf, byte, i, _i, _ref;\n      if (encoding == null) {\n        encoding = 'ascii';\n      }\n      switch (encoding) {\n        case 'utf16le':\n        case 'ucs2':\n        case 'utf8':\n        case 'ascii':\n          return this.writeBuffer(new Buffer(string, encoding));\n        case 'utf16be':\n          buf = new Buffer(string, 'utf16le');\n          for (i = _i = 0, _ref = buf.length - 1; _i < _ref; i = _i += 2) {\n            byte = buf[i];\n            buf[i] = buf[i + 1];\n            buf[i + 1] = byte;\n          }\n          return this.writeBuffer(buf);\n        default:\n          if (iconv) {\n            return this.writeBuffer(iconv.encode(string, encoding));\n          } else {\n            throw new Error('Install iconv-lite to enable additional string encodings.');\n          }\n      }\n    };\n\n    EncodeStream.prototype.writeUInt24BE = function(val) {\n      this.ensure(3);\n      this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n      this.buffer[this.bufferOffset++] = val & 0xff;\n      return this.pos += 3;\n    };\n\n    EncodeStream.prototype.writeUInt24LE = function(val) {\n      this.ensure(3);\n      this.buffer[this.bufferOffset++] = val & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n      return this.pos += 3;\n    };\n\n    EncodeStream.prototype.writeInt24BE = function(val) {\n      if (val >= 0) {\n        return this.writeUInt24BE(val);\n      } else {\n        return this.writeUInt24BE(val + 0xffffff + 1);\n      }\n    };\n\n    EncodeStream.prototype.writeInt24LE = function(val) {\n      if (val >= 0) {\n        return this.writeUInt24LE(val);\n      } else {\n        return this.writeUInt24LE(val + 0xffffff + 1);\n      }\n    };\n\n    EncodeStream.prototype.fill = function(val, length) {\n      var buf;\n      if (length < this.buffer.length) {\n        this.ensure(length);\n        this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n        this.bufferOffset += length;\n        return this.pos += length;\n      } else {\n        buf = new Buffer(length);\n        buf.fill(val);\n        return this.writeBuffer(buf);\n      }\n    };\n\n    EncodeStream.prototype.end = function() {\n      this.flush();\n      return this.push(null);\n    };\n\n    return EncodeStream;\n\n  })(stream.Readable);\n\n  module.exports = EncodeStream;\n\n}).call(this);\n","map":{"mappings":[{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/restructure/src/EncodeStream.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}}],"sources":{"node_modules/restructure/src/EncodeStream.js":"// Generated by CoffeeScript 1.7.1\n(function() {\n  var DecodeStream, EncodeStream, iconv, stream,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  stream = require('stream');\n\n  DecodeStream = require('./DecodeStream');\n\n  try {\n    iconv = require('iconv-lite');\n  } catch (_error) {}\n\n  EncodeStream = (function(_super) {\n    var key;\n\n    __extends(EncodeStream, _super);\n\n    function EncodeStream(bufferSize) {\n      if (bufferSize == null) {\n        bufferSize = 65536;\n      }\n      EncodeStream.__super__.constructor.apply(this, arguments);\n      this.buffer = new Buffer(bufferSize);\n      this.bufferOffset = 0;\n      this.pos = 0;\n    }\n\n    for (key in Buffer.prototype) {\n      if (key.slice(0, 5) === 'write') {\n        (function(key) {\n          var bytes;\n          bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n          return EncodeStream.prototype[key] = function(value) {\n            this.ensure(bytes);\n            this.buffer[key](value, this.bufferOffset);\n            this.bufferOffset += bytes;\n            return this.pos += bytes;\n          };\n        })(key);\n      }\n    }\n\n    EncodeStream.prototype._read = function() {};\n\n    EncodeStream.prototype.ensure = function(bytes) {\n      if (this.bufferOffset + bytes > this.buffer.length) {\n        return this.flush();\n      }\n    };\n\n    EncodeStream.prototype.flush = function() {\n      if (this.bufferOffset > 0) {\n        this.push(new Buffer(this.buffer.slice(0, this.bufferOffset)));\n        return this.bufferOffset = 0;\n      }\n    };\n\n    EncodeStream.prototype.writeBuffer = function(buffer) {\n      this.flush();\n      this.push(buffer);\n      return this.pos += buffer.length;\n    };\n\n    EncodeStream.prototype.writeString = function(string, encoding) {\n      var buf, byte, i, _i, _ref;\n      if (encoding == null) {\n        encoding = 'ascii';\n      }\n      switch (encoding) {\n        case 'utf16le':\n        case 'ucs2':\n        case 'utf8':\n        case 'ascii':\n          return this.writeBuffer(new Buffer(string, encoding));\n        case 'utf16be':\n          buf = new Buffer(string, 'utf16le');\n          for (i = _i = 0, _ref = buf.length - 1; _i < _ref; i = _i += 2) {\n            byte = buf[i];\n            buf[i] = buf[i + 1];\n            buf[i + 1] = byte;\n          }\n          return this.writeBuffer(buf);\n        default:\n          if (iconv) {\n            return this.writeBuffer(iconv.encode(string, encoding));\n          } else {\n            throw new Error('Install iconv-lite to enable additional string encodings.');\n          }\n      }\n    };\n\n    EncodeStream.prototype.writeUInt24BE = function(val) {\n      this.ensure(3);\n      this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n      this.buffer[this.bufferOffset++] = val & 0xff;\n      return this.pos += 3;\n    };\n\n    EncodeStream.prototype.writeUInt24LE = function(val) {\n      this.ensure(3);\n      this.buffer[this.bufferOffset++] = val & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n      this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n      return this.pos += 3;\n    };\n\n    EncodeStream.prototype.writeInt24BE = function(val) {\n      if (val >= 0) {\n        return this.writeUInt24BE(val);\n      } else {\n        return this.writeUInt24BE(val + 0xffffff + 1);\n      }\n    };\n\n    EncodeStream.prototype.writeInt24LE = function(val) {\n      if (val >= 0) {\n        return this.writeUInt24LE(val);\n      } else {\n        return this.writeUInt24LE(val + 0xffffff + 1);\n      }\n    };\n\n    EncodeStream.prototype.fill = function(val, length) {\n      var buf;\n      if (length < this.buffer.length) {\n        this.ensure(length);\n        this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n        this.bufferOffset += length;\n        return this.pos += length;\n      } else {\n        buf = new Buffer(length);\n        buf.fill(val);\n        return this.writeBuffer(buf);\n      }\n    };\n\n    EncodeStream.prototype.end = function() {\n      this.flush();\n      return this.push(null);\n    };\n\n    return EncodeStream;\n\n  })(stream.Readable);\n\n  module.exports = EncodeStream;\n\n}).call(this);\n"},"lineCount":153}},"hash":"244b553bb7ba4bc0c5543b769cfdbf6e","cacheData":{"env":{}}}